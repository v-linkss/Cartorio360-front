import { g as g$1 } from './nuxt-link-P_iIRbMa.mjs';
import { A as Al, $ as $l, I as Il, B as Bl, D as Dl, N as Nl, G as Gl, e as ea } from './Restricoes-B1mU28cL.mjs';
import { ref, reactive, withAsyncContext, resolveDirective, mergeProps, withCtx, createVNode, toDisplayString, unref, isRef, createTextVNode, openBlock, createBlock, createCommentVNode, withDirectives, useSSRContext } from 'vue';
import { _ as jc, u as Ze, f as Ue, c as Qe, b as Ye, d as Ct, au as Lo, e as is } from './server.mjs';
import { v, g } from './fetch-D2ZU2xOO.mjs';
import { ssrRenderComponent, ssrRenderStyle, ssrInterpolate, ssrGetDirectiveProps, ssrRenderAttr } from 'vue/server-renderer';
import { A } from './sair-ToPptOUL.mjs';
import { A as A$1 } from './salvar-37abXc2X.mjs';
import { useVuelidate } from '@vuelidate/core';
import { o as oe } from './VCard-zlRMnW-z.mjs';
import { L } from './VAutocomplete-yDrVnvO6.mjs';
import { i } from './VContainer-Dwlw6VVY.mjs';
import { $ } from './VRow-Ca2v9sIW.mjs';
import { y } from './VCol-CrrHdFZ4.mjs';
import '../runtime.mjs';
import 'node:http';
import 'node:https';
import 'fs';
import 'path';
import 'node:fs';
import 'node:url';
import '../routes/renderer.mjs';
import 'vue-bundle-renderer/runtime';
import 'devalue';
import '@unhead/ssr';
import 'unhead';
import '@unhead/shared';
import './formatDate-Dt3m51Lf.mjs';
import './mudarStatus-COPzM8_6.mjs';
import '@vuelidate/validators';
import 'vue-router';
import 'vue3-toastify';
import 'vue-the-mask';

const K = { __name: "[id]", __ssrInlineRender: true, emits: ["saved"], async setup(M2, { emit: F2 }) {
  let K2, Q2;
  const W2 = ref(null), X = Ze(), { $toast: Y } = Ue(), Z = Qe(), { id: ee } = Z.params, le = Ye(), ae = `${le.public.managemant}/updatePessoa`, de = `${le.public.managemant}/listarEstadoCivil`, oe$1 = `${le.public.managemant}/listarCapacidadeCivil`, te = `${le.public.managemant}/listarCidades`, ie = `${le.public.managemant}/getPessoaById`, ue = { nome: "", nome_pai: "", nome_mae: "", profissao: "", data_nascimento: "", doc_identificacao: "", cpf_pai: "", cpf_mae: "", tipo_pessoa: "FISICA", tabvalores_estadocivil_id: "", tabvalores_capacidadecivil_id: "", cidade_natural_id: "", cartorio_id: Ct("user-data").value.cartorio_id, user_id: Ct("user-data").value.usuario_id }, me = reactive({ ...ue });
  function ne(e2) {
    if (e2)
      return e2.replace(/[.\-]/g, "");
    e2 = null;
  }
  const { data: se, status: ce, pending: re, error: pe } = ([K2, Q2] = withAsyncContext(async () => v("cliente-dados", async () => {
    const [e2, l2, a2, d2] = await Promise.all([$fetch(de), $fetch(oe$1), $fetch(te), $fetch(`${ie}/${ee}`)]);
    return Object.assign(me, d2), { estadoCivilItems: e2, capacidadeCivilItems: l2, cidadeNascimentoItems: a2 };
  })), K2 = await K2, Q2(), K2);
  async function _e() {
    const e2 = function(e3) {
      const l2 = {};
      for (const a2 in e3)
        "" === e3[a2] ? l2[a2] = null : l2[a2] = "doc_identificacao" === a2 || "cpf_pai" === a2 || "cpf_mae" === a2 ? ne(e3[a2]) : e3[a2];
      return l2;
    }(me);
    await g(`${ae}/${ee}`, { method: "PUT", body: e2 }, "$NdF8Uiv290"), Y.success("Pessoa atualizada com sucesso!"), X.push("/pessoas/registros");
  }
  return useVuelidate(me), (n2, s2, c2, M3) => {
    const F3 = g$1, y2 = Dl, N2 = Nl, k2 = Gl, I2 = ea, D2 = resolveDirective("mask");
    s2(ssrRenderComponent(oe, mergeProps({ width: "1300" }, M3), { default: withCtx((e2, t2, i2, u2) => {
      if (!t2)
        return [createVNode("h1", { style: { "background-color": "#c8fcca", color: "#429946", padding: "10px 0px 0px 20px" } }, toDisplayString(unref(ee) ? "Atualiza\xE7\xE3o de Pessoas" : "Cadastramento de Pessoas"), 1), createVNode("div", { style: { "background-color": "#c8fcca", padding: "20px 0px 20px 20px" } }, [createVNode(L, { modelValue: me.tipo_pessoa, "onUpdate:modelValue": (e3) => me.tipo_pessoa = e3, style: { width: "200px" }, items: n2.pessoa_tipo, label: "Tipo de pessoa", "bg-color": "#F6F6F6", disabled: "" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), createVNode(Al, { modelValue: unref(W2), "onUpdate:modelValue": (e3) => isRef(W2) ? W2.value = e3 : null, "bg-color": "#C8FCCA" }, { default: withCtx(() => [createVNode($l, { value: "dados" }, { default: withCtx(() => [createTextVNode("Dados")]), _: 1 }), createVNode($l, { value: "documento" }, { default: withCtx(() => [createTextVNode("Documentos")]), _: 1 }), createVNode($l, { value: "endereco" }, { default: withCtx(() => [createTextVNode("Endere\xE7os")]), _: 1 }), createVNode($l, { value: "biometria" }, { default: withCtx(() => [createTextVNode("Biometria")]), _: 1 }), createVNode($l, { value: "restricao" }, { default: withCtx(() => [createTextVNode("Restri\xE7\xF5es")]), _: 1 })]), _: 1 }, 8, ["modelValue", "onUpdate:modelValue"]), createVNode(Il, { modelValue: unref(W2), "onUpdate:modelValue": (e3) => isRef(W2) ? W2.value = e3 : null }, { default: withCtx(() => [createVNode(Bl, { value: "dados" }, { default: withCtx(() => [unref(re) ? (openBlock(), createBlock(Lo, { key: 0, class: "loading-spinner", indeterminate: "", size: "64" })) : unref(pe) ? (openBlock(), createBlock("div", { key: 1 }, toDisplayString(unref(pe).message), 1)) : createCommentVNode("", true), unref(re) ? createCommentVNode("", true) : (openBlock(), createBlock(i, { key: 2, class: "mt-5" }, { default: withCtx(() => [createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "8" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome, "onUpdate:modelValue": (e3) => me.nome = e3, label: "Nome" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.doc_identificacao, "onUpdate:modelValue": (e3) => me.doc_identificacao = e3, label: "CPF", required: "" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_estadocivil_id, "onUpdate:modelValue": (e3) => me.tabvalores_estadocivil_id = e3, items: unref(se).estadoCivilItems, "item-title": "descricao", "item-value": "id", label: "Estado Civil" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.profissao, "onUpdate:modelValue": (e3) => me.profissao = e3, label: "Profiss\xE3o" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.local_trabalho, "onUpdate:modelValue": (e3) => me.local_trabalho = e3, label: "Local de trabalho" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.data_nascimento, "onUpdate:modelValue": (e3) => me.data_nascimento = e3, type: "date", "prepend-icon": "", label: "Data de nascimento" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_capacidadecivil_id, "onUpdate:modelValue": (e3) => me.tabvalores_capacidadecivil_id = e3, items: unref(se).capacidadeCivilItems, label: "Capacidade Civil", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.cidade_natural_id, "onUpdate:modelValue": (e3) => me.cidade_natural_id = e3, items: unref(se).cidadeNascimentoItems, label: "Cidade de nascimento", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_pai, "onUpdate:modelValue": (e3) => me.cpf_pai = e3, modelModifiers: { date: true }, label: "CPF do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_pai, "onUpdate:modelValue": (e3) => me.nome_pai = e3, modelModifiers: { date: true }, label: "Nome do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_mae, "onUpdate:modelValue": (e3) => me.cpf_mae = e3, modelModifiers: { date: true }, label: "CPF da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_mae, "onUpdate:modelValue": (e3) => me.nome_mae = e3, modelModifiers: { date: true }, label: "Nome da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(F3, { to: "/pessoas/registros" }, { default: withCtx(() => [createVNode("img", { class: "btn-pointer", src: A, alt: "Sair" })]), _: 1 }), createVNode("img", { class: "btn-pointer", src: A$1, onClick: (e3) => _e() }, null, 8, ["onClick"])]), _: 1 })]), _: 1 }))]), _: 1 }), createVNode(Bl, { value: "documento" }, { default: withCtx(() => [createVNode(y2)]), _: 1 }), createVNode(Bl, { value: "endereco" }, { default: withCtx(() => [createVNode(N2)]), _: 1 }), createVNode(Bl, { value: "biometria" }, { default: withCtx(() => [createVNode(i, { class: "mt-5" }, { default: withCtx(() => [createVNode(k2)]), _: 1 })]), _: 1 }), createVNode(Bl, { value: "restricao" }, { default: withCtx(() => [createVNode(I2)]), _: 1 })]), _: 1 }, 8, ["modelValue", "onUpdate:modelValue"])];
      t2(`<h1 style="${ssrRenderStyle({ "background-color": "#c8fcca", color: "#429946", padding: "10px 0px 0px 20px" })}" data-v-b1b4e75d${u2}>${ssrInterpolate(unref(ee) ? "Atualiza\xE7\xE3o de Pessoas" : "Cadastramento de Pessoas")}</h1><div style="${ssrRenderStyle({ "background-color": "#c8fcca", padding: "20px 0px 20px 20px" })}" data-v-b1b4e75d${u2}>`), t2(ssrRenderComponent(L, { modelValue: me.tipo_pessoa, "onUpdate:modelValue": (e3) => me.tipo_pessoa = e3, style: { width: "200px" }, items: n2.pessoa_tipo, label: "Tipo de pessoa", "bg-color": "#F6F6F6", disabled: "" }, null, i2, u2)), t2("</div>"), t2(ssrRenderComponent(Al, { modelValue: unref(W2), "onUpdate:modelValue": (e3) => isRef(W2) ? W2.value = e3 : null, "bg-color": "#C8FCCA" }, { default: withCtx((e3, l2, d2, o2) => {
        if (!l2)
          return [createVNode($l, { value: "dados" }, { default: withCtx(() => [createTextVNode("Dados")]), _: 1 }), createVNode($l, { value: "documento" }, { default: withCtx(() => [createTextVNode("Documentos")]), _: 1 }), createVNode($l, { value: "endereco" }, { default: withCtx(() => [createTextVNode("Endere\xE7os")]), _: 1 }), createVNode($l, { value: "biometria" }, { default: withCtx(() => [createTextVNode("Biometria")]), _: 1 }), createVNode($l, { value: "restricao" }, { default: withCtx(() => [createTextVNode("Restri\xE7\xF5es")]), _: 1 })];
        l2(ssrRenderComponent($l, { value: "dados" }, { default: withCtx((e4, l3, a2, d3) => {
          if (!l3)
            return [createTextVNode("Dados")];
          l3("Dados");
        }), _: 1 }, d2, o2)), l2(ssrRenderComponent($l, { value: "documento" }, { default: withCtx((e4, l3, a2, d3) => {
          if (!l3)
            return [createTextVNode("Documentos")];
          l3("Documentos");
        }), _: 1 }, d2, o2)), l2(ssrRenderComponent($l, { value: "endereco" }, { default: withCtx((e4, l3, a2, d3) => {
          if (!l3)
            return [createTextVNode("Endere\xE7os")];
          l3("Endere\xE7os");
        }), _: 1 }, d2, o2)), l2(ssrRenderComponent($l, { value: "biometria" }, { default: withCtx((e4, l3, a2, d3) => {
          if (!l3)
            return [createTextVNode("Biometria")];
          l3("Biometria");
        }), _: 1 }, d2, o2)), l2(ssrRenderComponent($l, { value: "restricao" }, { default: withCtx((e4, l3, a2, d3) => {
          if (!l3)
            return [createTextVNode("Restri\xE7\xF5es")];
          l3("Restri\xE7\xF5es");
        }), _: 1 }, d2, o2));
      }), _: 1 }, i2, u2)), t2(ssrRenderComponent(Il, { modelValue: unref(W2), "onUpdate:modelValue": (e3) => isRef(W2) ? W2.value = e3 : null }, { default: withCtx((e3, l2, a2, d2) => {
        if (!l2)
          return [createVNode(Bl, { value: "dados" }, { default: withCtx(() => [unref(re) ? (openBlock(), createBlock(Lo, { key: 0, class: "loading-spinner", indeterminate: "", size: "64" })) : unref(pe) ? (openBlock(), createBlock("div", { key: 1 }, toDisplayString(unref(pe).message), 1)) : createCommentVNode("", true), unref(re) ? createCommentVNode("", true) : (openBlock(), createBlock(i, { key: 2, class: "mt-5" }, { default: withCtx(() => [createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "8" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome, "onUpdate:modelValue": (e4) => me.nome = e4, label: "Nome" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.doc_identificacao, "onUpdate:modelValue": (e4) => me.doc_identificacao = e4, label: "CPF", required: "" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_estadocivil_id, "onUpdate:modelValue": (e4) => me.tabvalores_estadocivil_id = e4, items: unref(se).estadoCivilItems, "item-title": "descricao", "item-value": "id", label: "Estado Civil" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.profissao, "onUpdate:modelValue": (e4) => me.profissao = e4, label: "Profiss\xE3o" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.local_trabalho, "onUpdate:modelValue": (e4) => me.local_trabalho = e4, label: "Local de trabalho" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.data_nascimento, "onUpdate:modelValue": (e4) => me.data_nascimento = e4, type: "date", "prepend-icon": "", label: "Data de nascimento" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_capacidadecivil_id, "onUpdate:modelValue": (e4) => me.tabvalores_capacidadecivil_id = e4, items: unref(se).capacidadeCivilItems, label: "Capacidade Civil", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.cidade_natural_id, "onUpdate:modelValue": (e4) => me.cidade_natural_id = e4, items: unref(se).cidadeNascimentoItems, label: "Cidade de nascimento", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_pai, "onUpdate:modelValue": (e4) => me.cpf_pai = e4, modelModifiers: { date: true }, label: "CPF do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_pai, "onUpdate:modelValue": (e4) => me.nome_pai = e4, modelModifiers: { date: true }, label: "Nome do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_mae, "onUpdate:modelValue": (e4) => me.cpf_mae = e4, modelModifiers: { date: true }, label: "CPF da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_mae, "onUpdate:modelValue": (e4) => me.nome_mae = e4, modelModifiers: { date: true }, label: "Nome da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(F3, { to: "/pessoas/registros" }, { default: withCtx(() => [createVNode("img", { class: "btn-pointer", src: A, alt: "Sair" })]), _: 1 }), createVNode("img", { class: "btn-pointer", src: A$1, onClick: (e4) => _e() }, null, 8, ["onClick"])]), _: 1 })]), _: 1 }))]), _: 1 }), createVNode(Bl, { value: "documento" }, { default: withCtx(() => [createVNode(y2)]), _: 1 }), createVNode(Bl, { value: "endereco" }, { default: withCtx(() => [createVNode(N2)]), _: 1 }), createVNode(Bl, { value: "biometria" }, { default: withCtx(() => [createVNode(i, { class: "mt-5" }, { default: withCtx(() => [createVNode(k2)]), _: 1 })]), _: 1 }), createVNode(Bl, { value: "restricao" }, { default: withCtx(() => [createVNode(I2)]), _: 1 })];
        l2(ssrRenderComponent(Bl, { value: "dados" }, { default: withCtx((e4, l3, a3, d3) => {
          if (!l3)
            return [unref(re) ? (openBlock(), createBlock(Lo, { key: 0, class: "loading-spinner", indeterminate: "", size: "64" })) : unref(pe) ? (openBlock(), createBlock("div", { key: 1 }, toDisplayString(unref(pe).message), 1)) : createCommentVNode("", true), unref(re) ? createCommentVNode("", true) : (openBlock(), createBlock(i, { key: 2, class: "mt-5" }, { default: withCtx(() => [createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "8" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome, "onUpdate:modelValue": (e5) => me.nome = e5, label: "Nome" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.doc_identificacao, "onUpdate:modelValue": (e5) => me.doc_identificacao = e5, label: "CPF", required: "" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_estadocivil_id, "onUpdate:modelValue": (e5) => me.tabvalores_estadocivil_id = e5, items: unref(se).estadoCivilItems, "item-title": "descricao", "item-value": "id", label: "Estado Civil" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.profissao, "onUpdate:modelValue": (e5) => me.profissao = e5, label: "Profiss\xE3o" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.local_trabalho, "onUpdate:modelValue": (e5) => me.local_trabalho = e5, label: "Local de trabalho" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.data_nascimento, "onUpdate:modelValue": (e5) => me.data_nascimento = e5, type: "date", "prepend-icon": "", label: "Data de nascimento" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_capacidadecivil_id, "onUpdate:modelValue": (e5) => me.tabvalores_capacidadecivil_id = e5, items: unref(se).capacidadeCivilItems, label: "Capacidade Civil", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.cidade_natural_id, "onUpdate:modelValue": (e5) => me.cidade_natural_id = e5, items: unref(se).cidadeNascimentoItems, label: "Cidade de nascimento", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_pai, "onUpdate:modelValue": (e5) => me.cpf_pai = e5, modelModifiers: { date: true }, label: "CPF do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_pai, "onUpdate:modelValue": (e5) => me.nome_pai = e5, modelModifiers: { date: true }, label: "Nome do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_mae, "onUpdate:modelValue": (e5) => me.cpf_mae = e5, modelModifiers: { date: true }, label: "CPF da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_mae, "onUpdate:modelValue": (e5) => me.nome_mae = e5, modelModifiers: { date: true }, label: "Nome da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(F3, { to: "/pessoas/registros" }, { default: withCtx(() => [createVNode("img", { class: "btn-pointer", src: A, alt: "Sair" })]), _: 1 }), createVNode("img", { class: "btn-pointer", src: A$1, onClick: (e5) => _e() }, null, 8, ["onClick"])]), _: 1 })]), _: 1 }))];
          unref(re) ? l3(ssrRenderComponent(Lo, { class: "loading-spinner", indeterminate: "", size: "64" }, null, a3, d3)) : unref(pe) ? l3(`<div data-v-b1b4e75d${d3}>${ssrInterpolate(unref(pe).message)}</div>`) : l3("<!---->"), unref(re) ? l3("<!---->") : l3(ssrRenderComponent(i, { class: "mt-5" }, { default: withCtx((e5, l4, a4, d4) => {
            if (!l4)
              return [createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "8" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome, "onUpdate:modelValue": (e6) => me.nome = e6, label: "Nome" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.doc_identificacao, "onUpdate:modelValue": (e6) => me.doc_identificacao = e6, label: "CPF", required: "" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_estadocivil_id, "onUpdate:modelValue": (e6) => me.tabvalores_estadocivil_id = e6, items: unref(se).estadoCivilItems, "item-title": "descricao", "item-value": "id", label: "Estado Civil" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.profissao, "onUpdate:modelValue": (e6) => me.profissao = e6, label: "Profiss\xE3o" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.local_trabalho, "onUpdate:modelValue": (e6) => me.local_trabalho = e6, label: "Local de trabalho" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.data_nascimento, "onUpdate:modelValue": (e6) => me.data_nascimento = e6, type: "date", "prepend-icon": "", label: "Data de nascimento" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_capacidadecivil_id, "onUpdate:modelValue": (e6) => me.tabvalores_capacidadecivil_id = e6, items: unref(se).capacidadeCivilItems, label: "Capacidade Civil", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.cidade_natural_id, "onUpdate:modelValue": (e6) => me.cidade_natural_id = e6, items: unref(se).cidadeNascimentoItems, label: "Cidade de nascimento", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_pai, "onUpdate:modelValue": (e6) => me.cpf_pai = e6, modelModifiers: { date: true }, label: "CPF do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_pai, "onUpdate:modelValue": (e6) => me.nome_pai = e6, modelModifiers: { date: true }, label: "Nome do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_mae, "onUpdate:modelValue": (e6) => me.cpf_mae = e6, modelModifiers: { date: true }, label: "CPF da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_mae, "onUpdate:modelValue": (e6) => me.nome_mae = e6, modelModifiers: { date: true }, label: "Nome da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })]), _: 1 }), createVNode($, null, { default: withCtx(() => [createVNode(F3, { to: "/pessoas/registros" }, { default: withCtx(() => [createVNode("img", { class: "btn-pointer", src: A, alt: "Sair" })]), _: 1 }), createVNode("img", { class: "btn-pointer", src: A$1, onClick: (e6) => _e() }, null, 8, ["onClick"])]), _: 1 })];
            l4(ssrRenderComponent($, null, { default: withCtx((e6, l5, a5, d5) => {
              if (!l5)
                return [createVNode(y, { cols: "12", md: "8" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome, "onUpdate:modelValue": (e7) => me.nome = e7, label: "Nome" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.doc_identificacao, "onUpdate:modelValue": (e7) => me.doc_identificacao = e7, label: "CPF", required: "" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 })];
              l5(ssrRenderComponent(y, { cols: "12", md: "8" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(is, { modelValue: me.nome, "onUpdate:modelValue": (e8) => me.nome = e8, label: "Nome" }, null, 8, ["modelValue", "onUpdate:modelValue"])];
                l6(ssrRenderComponent(is, { modelValue: me.nome, "onUpdate:modelValue": (e8) => me.nome = e8, label: "Nome" }, null, a6, d6));
              }), _: 1 }, a5, d5)), l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [withDirectives(createVNode(is, { modelValue: me.doc_identificacao, "onUpdate:modelValue": (e8) => me.doc_identificacao = e8, label: "CPF", required: "" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])];
                l6(ssrRenderComponent(is, mergeProps({ modelValue: me.doc_identificacao, "onUpdate:modelValue": (e8) => me.doc_identificacao = e8, label: "CPF", required: "" }, ssrGetDirectiveProps(n2, D2, "###.###.###-##")), null, a6, d6));
              }), _: 1 }, a5, d5));
            }), _: 1 }, a4, d4)), l4(ssrRenderComponent($, null, { default: withCtx((e6, l5, a5, d5) => {
              if (!l5)
                return [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_estadocivil_id, "onUpdate:modelValue": (e7) => me.tabvalores_estadocivil_id = e7, items: unref(se).estadoCivilItems, "item-title": "descricao", "item-value": "id", label: "Estado Civil" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.profissao, "onUpdate:modelValue": (e7) => me.profissao = e7, label: "Profiss\xE3o" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.local_trabalho, "onUpdate:modelValue": (e7) => me.local_trabalho = e7, label: "Local de trabalho" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })];
              l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(L, { modelValue: me.tabvalores_estadocivil_id, "onUpdate:modelValue": (e8) => me.tabvalores_estadocivil_id = e8, items: unref(se).estadoCivilItems, "item-title": "descricao", "item-value": "id", label: "Estado Civil" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])];
                l6(ssrRenderComponent(L, { modelValue: me.tabvalores_estadocivil_id, "onUpdate:modelValue": (e8) => me.tabvalores_estadocivil_id = e8, items: unref(se).estadoCivilItems, "item-title": "descricao", "item-value": "id", label: "Estado Civil" }, null, a6, d6));
              }), _: 1 }, a5, d5)), l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(is, { modelValue: me.profissao, "onUpdate:modelValue": (e8) => me.profissao = e8, label: "Profiss\xE3o" }, null, 8, ["modelValue", "onUpdate:modelValue"])];
                l6(ssrRenderComponent(is, { modelValue: me.profissao, "onUpdate:modelValue": (e8) => me.profissao = e8, label: "Profiss\xE3o" }, null, a6, d6));
              }), _: 1 }, a5, d5)), l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(is, { modelValue: me.local_trabalho, "onUpdate:modelValue": (e8) => me.local_trabalho = e8, label: "Local de trabalho" }, null, 8, ["modelValue", "onUpdate:modelValue"])];
                l6(ssrRenderComponent(is, { modelValue: me.local_trabalho, "onUpdate:modelValue": (e8) => me.local_trabalho = e8, label: "Local de trabalho" }, null, a6, d6));
              }), _: 1 }, a5, d5));
            }), _: 1 }, a4, d4)), l4(ssrRenderComponent($, null, { default: withCtx((e6, l5, a5, d5) => {
              if (!l5)
                return [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.data_nascimento, "onUpdate:modelValue": (e7) => me.data_nascimento = e7, type: "date", "prepend-icon": "", label: "Data de nascimento" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.tabvalores_capacidadecivil_id, "onUpdate:modelValue": (e7) => me.tabvalores_capacidadecivil_id = e7, items: unref(se).capacidadeCivilItems, label: "Capacidade Civil", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(L, { modelValue: me.cidade_natural_id, "onUpdate:modelValue": (e7) => me.cidade_natural_id = e7, items: unref(se).cidadeNascimentoItems, label: "Cidade de nascimento", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])]), _: 1 })];
              l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(is, { modelValue: me.data_nascimento, "onUpdate:modelValue": (e8) => me.data_nascimento = e8, type: "date", "prepend-icon": "", label: "Data de nascimento" }, null, 8, ["modelValue", "onUpdate:modelValue"])];
                l6(ssrRenderComponent(is, { modelValue: me.data_nascimento, "onUpdate:modelValue": (e8) => me.data_nascimento = e8, type: "date", "prepend-icon": "", label: "Data de nascimento" }, null, a6, d6));
              }), _: 1 }, a5, d5)), l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(L, { modelValue: me.tabvalores_capacidadecivil_id, "onUpdate:modelValue": (e8) => me.tabvalores_capacidadecivil_id = e8, items: unref(se).capacidadeCivilItems, label: "Capacidade Civil", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])];
                l6(ssrRenderComponent(L, { modelValue: me.tabvalores_capacidadecivil_id, "onUpdate:modelValue": (e8) => me.tabvalores_capacidadecivil_id = e8, items: unref(se).capacidadeCivilItems, label: "Capacidade Civil", "item-title": "descricao", "item-value": "id" }, null, a6, d6));
              }), _: 1 }, a5, d5)), l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(L, { modelValue: me.cidade_natural_id, "onUpdate:modelValue": (e8) => me.cidade_natural_id = e8, items: unref(se).cidadeNascimentoItems, label: "Cidade de nascimento", "item-title": "descricao", "item-value": "id" }, null, 8, ["modelValue", "onUpdate:modelValue", "items"])];
                l6(ssrRenderComponent(L, { modelValue: me.cidade_natural_id, "onUpdate:modelValue": (e8) => me.cidade_natural_id = e8, items: unref(se).cidadeNascimentoItems, label: "Cidade de nascimento", "item-title": "descricao", "item-value": "id" }, null, a6, d6));
              }), _: 1 }, a5, d5));
            }), _: 1 }, a4, d4)), l4(ssrRenderComponent($, null, { default: withCtx((e6, l5, a5, d5) => {
              if (!l5)
                return [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_pai, "onUpdate:modelValue": (e7) => me.cpf_pai = e7, modelModifiers: { date: true }, label: "CPF do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_pai, "onUpdate:modelValue": (e7) => me.nome_pai = e7, modelModifiers: { date: true }, label: "Nome do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })];
              l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [withDirectives(createVNode(is, { modelValue: me.cpf_pai, "onUpdate:modelValue": (e8) => me.cpf_pai = e8, modelModifiers: { date: true }, label: "CPF do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])];
                l6(ssrRenderComponent(is, mergeProps({ modelValue: me.cpf_pai, "onUpdate:modelValue": (e8) => me.cpf_pai = e8, modelModifiers: { date: true }, label: "CPF do Pai" }, ssrGetDirectiveProps(n2, D2, "###.###.###-##")), null, a6, d6));
              }), _: 1 }, a5, d5)), l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(is, { modelValue: me.nome_pai, "onUpdate:modelValue": (e8) => me.nome_pai = e8, modelModifiers: { date: true }, label: "Nome do Pai" }, null, 8, ["modelValue", "onUpdate:modelValue"])];
                l6(ssrRenderComponent(is, { modelValue: me.nome_pai, "onUpdate:modelValue": (e8) => me.nome_pai = e8, modelModifiers: { date: true }, label: "Nome do Pai" }, null, a6, d6));
              }), _: 1 }, a5, d5));
            }), _: 1 }, a4, d4)), l4(ssrRenderComponent($, null, { default: withCtx((e6, l5, a5, d5) => {
              if (!l5)
                return [createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [withDirectives(createVNode(is, { modelValue: me.cpf_mae, "onUpdate:modelValue": (e7) => me.cpf_mae = e7, modelModifiers: { date: true }, label: "CPF da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])]), _: 1 }), createVNode(y, { cols: "12", md: "4" }, { default: withCtx(() => [createVNode(is, { modelValue: me.nome_mae, "onUpdate:modelValue": (e7) => me.nome_mae = e7, modelModifiers: { date: true }, label: "Nome da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"])]), _: 1 })];
              l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [withDirectives(createVNode(is, { modelValue: me.cpf_mae, "onUpdate:modelValue": (e8) => me.cpf_mae = e8, modelModifiers: { date: true }, label: "CPF da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"]), [[D2, "###.###.###-##"]])];
                l6(ssrRenderComponent(is, mergeProps({ modelValue: me.cpf_mae, "onUpdate:modelValue": (e8) => me.cpf_mae = e8, modelModifiers: { date: true }, label: "CPF da M\xE3e" }, ssrGetDirectiveProps(n2, D2, "###.###.###-##")), null, a6, d6));
              }), _: 1 }, a5, d5)), l5(ssrRenderComponent(y, { cols: "12", md: "4" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode(is, { modelValue: me.nome_mae, "onUpdate:modelValue": (e8) => me.nome_mae = e8, modelModifiers: { date: true }, label: "Nome da M\xE3e" }, null, 8, ["modelValue", "onUpdate:modelValue"])];
                l6(ssrRenderComponent(is, { modelValue: me.nome_mae, "onUpdate:modelValue": (e8) => me.nome_mae = e8, modelModifiers: { date: true }, label: "Nome da M\xE3e" }, null, a6, d6));
              }), _: 1 }, a5, d5));
            }), _: 1 }, a4, d4)), l4(ssrRenderComponent($, null, { default: withCtx((e6, l5, a5, d5) => {
              if (!l5)
                return [createVNode(F3, { to: "/pessoas/registros" }, { default: withCtx(() => [createVNode("img", { class: "btn-pointer", src: A, alt: "Sair" })]), _: 1 }), createVNode("img", { class: "btn-pointer", src: A$1, onClick: (e7) => _e() }, null, 8, ["onClick"])];
              l5(ssrRenderComponent(F3, { to: "/pessoas/registros" }, { default: withCtx((e7, l6, a6, d6) => {
                if (!l6)
                  return [createVNode("img", { class: "btn-pointer", src: A, alt: "Sair" })];
                l6(`<img class="btn-pointer"${ssrRenderAttr("src", A)} alt="Sair" data-v-b1b4e75d${d6}>`);
              }), _: 1 }, a5, d5)), l5(`<img class="btn-pointer"${ssrRenderAttr("src", A$1)} data-v-b1b4e75d${d5}>`);
            }), _: 1 }, a4, d4));
          }), _: 1 }, a3, d3));
        }), _: 1 }, a2, d2)), l2(ssrRenderComponent(Bl, { value: "documento" }, { default: withCtx((e4, l3, a3, d3) => {
          if (!l3)
            return [createVNode(y2)];
          l3(ssrRenderComponent(y2, null, null, a3, d3));
        }), _: 1 }, a2, d2)), l2(ssrRenderComponent(Bl, { value: "endereco" }, { default: withCtx((e4, l3, a3, d3) => {
          if (!l3)
            return [createVNode(N2)];
          l3(ssrRenderComponent(N2, null, null, a3, d3));
        }), _: 1 }, a2, d2)), l2(ssrRenderComponent(Bl, { value: "biometria" }, { default: withCtx((e4, l3, a3, d3) => {
          if (!l3)
            return [createVNode(i, { class: "mt-5" }, { default: withCtx(() => [createVNode(k2)]), _: 1 })];
          l3(ssrRenderComponent(i, { class: "mt-5" }, { default: withCtx((e5, l4, a4, d4) => {
            if (!l4)
              return [createVNode(k2)];
            l4(ssrRenderComponent(k2, null, null, a4, d4));
          }), _: 1 }, a3, d3));
        }), _: 1 }, a2, d2)), l2(ssrRenderComponent(Bl, { value: "restricao" }, { default: withCtx((e4, l3, a3, d3) => {
          if (!l3)
            return [createVNode(I2)];
          l3(ssrRenderComponent(I2, null, null, a3, d3));
        }), _: 1 }, a2, d2));
      }), _: 1 }, i2, u2));
    }), _: 1 }, c2));
  };
} }, Q = K.setup;
K.setup = (e2, l2) => {
  const a2 = useSSRContext();
  return (a2.modules || (a2.modules = /* @__PURE__ */ new Set())).add("pages/pessoas/atualizar/[id].vue"), Q ? Q(e2, l2) : void 0;
};
const W = jc(K, [["__scopeId", "data-v-b1b4e75d"]]);

export { W as default };
//# sourceMappingURL=_id_-DXbBhuE7.mjs.map
