import{n as T,dM as m,r as O,bq as z,bx as B,b0 as x,b7 as F,g as j,b5 as q,dN as L,x as S,l as U,aB as V,P as $,bz as y,dO as H,q as K,dP as N}from"./CNAiVaQm.js";const I=a=>a==="defer"||a===!1;function M(...a){var w;const s=typeof a[a.length-1]=="string"?a.pop():void 0;typeof a[0]!="string"&&a.unshift(s);let[n,i,e={}]=a;if(typeof n!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof i!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const t=T(),l=i,p=()=>m.value,P=()=>t.isHydrating?t.payload.data[n]:t.static.data[n];e.server=e.server??!0,e.default=e.default??p,e.getCachedData=e.getCachedData??P,e.lazy=e.lazy??!1,e.immediate=e.immediate??!0,e.deep=e.deep??m.deep,e.dedupe=e.dedupe??"cancel";const h=e.getCachedData(n,t),v=h!=null;if(!t._asyncData[n]||!e.immediate){(w=t.payload._errors)[n]??(w[n]=m.errorValue);const c=e.deep?O:z;t._asyncData[n]={data:c(v?h:e.default()),pending:O(!v),error:B(t.payload._errors,n),status:O("idle"),_default:e.default}}const r={...t._asyncData[n]};delete r._default,r.refresh=r.execute=(c={})=>{if(t._asyncDataPromises[n]){if(I(c.dedupe??e.dedupe))return t._asyncDataPromises[n];t._asyncDataPromises[n].cancelled=!0}if(c._initial||t.isHydrating&&c._initial!==!1){const u=c._initial?h:e.getCachedData(n,t);if(u!=null)return Promise.resolve(u)}r.pending.value=!0,r.status.value="pending";const f=new Promise((u,o)=>{try{u(l(t))}catch(_){o(_)}}).then(async u=>{if(f.cancelled)return t._asyncDataPromises[n];let o=u;e.transform&&(o=await e.transform(u)),e.pick&&(o=J(o,e.pick)),t.payload.data[n]=o,r.data.value=o,r.error.value=m.errorValue,r.status.value="success"}).catch(u=>{if(f.cancelled)return t._asyncDataPromises[n];r.error.value=L(u),r.data.value=S(e.default()),r.status.value="error"}).finally(()=>{f.cancelled||(r.pending.value=!1,delete t._asyncDataPromises[n])});return t._asyncDataPromises[n]=f,t._asyncDataPromises[n]},r.clear=()=>G(t,n);const b=()=>r.refresh({_initial:!0}),D=e.server!==!1&&t.payload.serverRendered;{const c=U();if(c&&D&&e.immediate&&!c.sp&&(c.sp=[]),c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const o=c._nuxtOnBeforeMountCbs;x(()=>{o.forEach(_=>{_()}),o.splice(0,o.length)}),F(()=>o.splice(0,o.length))}D&&t.isHydrating&&(r.error.value||h!=null)?(r.pending.value=!1,r.status.value=r.error.value?"error":"success"):c&&(t.payload.serverRendered&&t.isHydrating||e.lazy)&&e.immediate?c._nuxtOnBeforeMountCbs.push(b):e.immediate&&b();const f=V();if(e.watch){const o=j(e.watch,()=>r.refresh());f&&q(o)}const u=t.hook("app:data:refresh",async o=>{(!o||o.includes(n))&&await r.refresh()});f&&q(u)}const g=Promise.resolve(t._asyncDataPromises[n]).then(()=>r);return Object.assign(g,r),g}function Z(...a){const s=typeof a[a.length-1]=="string"?a.pop():void 0;typeof a[0]!="string"&&a.unshift(s);const[n,i,e={}]=a;return M(n,i,{...e,lazy:!0},null)}function G(a,s){s in a.payload.data&&(a.payload.data[s]=void 0),s in a.payload._errors&&(a.payload._errors[s]=m.errorValue),a._asyncData[s]&&(a._asyncData[s].data.value=void 0,a._asyncData[s].error.value=m.errorValue,a._asyncData[s].pending.value=!1,a._asyncData[s].status.value="idle"),s in a._asyncDataPromises&&(a._asyncDataPromises[s]&&(a._asyncDataPromises[s].cancelled=!0),a._asyncDataPromises[s]=void 0)}function J(a,s){const n={};for(const i of s)n[i]=a[i];return n}function k(a,s,n){const[i={},e]=typeof s=="string"?[{},s]:[s,n],t=$(()=>y(a)),l=i.key||H([e,typeof t.value=="string"?t.value:"",...Q(i)]);if(!l||typeof l!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+l);if(!a)throw new Error("[nuxt] [useFetch] request is missing.");const p=l===e?"$f"+l:l;if(!i.baseURL&&typeof t.value=="string"&&t.value[0]==="/"&&t.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:P,lazy:h,default:v,transform:r,pick:b,watch:D,immediate:g,getCachedData:w,deep:c,dedupe:f,...u}=i,o=K({...N,...u,cache:typeof i.cache=="boolean"?void 0:i.cache}),_={server:P,lazy:h,default:v,transform:r,pick:b,immediate:g,getCachedData:w,deep:c,dedupe:f,watch:D===!1?[]:[o,t,...D||[]]};let d;return M(p,()=>{var R;(R=d==null?void 0:d.abort)==null||R.call(d,new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),d=typeof AbortController<"u"?new AbortController:{};const E=y(i.timeout);let C;return E&&(C=setTimeout(()=>d.abort(new DOMException("Request aborted due to timeout.","AbortError")),E),d.signal.onabort=()=>clearTimeout(C)),(i.$fetch||globalThis.$fetch)(t.value,{signal:d.signal,...o}).finally(()=>{clearTimeout(C)})},_)}function Q(a){var n;const s=[((n=y(a.method))==null?void 0:n.toUpperCase())||"GET",y(a.baseURL)];for(const i of[a.params||a.query]){const e=y(i);if(!e)continue;const t={};for(const[l,p]of Object.entries(e))t[y(l)]=y(p);s.push(t)}return s}export{Z as a,k as u};
