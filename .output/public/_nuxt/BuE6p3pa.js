import{q as C,bA as L,W as O,bB as $,bC as u}from"./CGGPSomy.js";import{a as q}from"./BgQync5K.js";function x(s,e,c){const[t={},r]=typeof e=="string"?[{},e]:[e,c],o=C(()=>u(s)),n=t.key||L([r,typeof o.value=="string"?o.value:"",...A(t)]);if(!n||typeof n!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+n);if(!s)throw new Error("[nuxt] [useFetch] request is missing.");const i=n===r?"$f"+n:n;if(!t.baseURL&&typeof o.value=="string"&&o.value[0]==="/"&&o.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:m,lazy:b,default:d,transform:g,pick:w,watch:h,immediate:v,getCachedData:_,deep:k,dedupe:D,...F}=t,l=O({...$,...F,cache:typeof t.cache=="boolean"?void 0:t.cache}),T={server:m,lazy:b,default:d,transform:g,pick:w,immediate:v,getCachedData:_,deep:k,dedupe:D,watch:h===!1?[]:[l,o,...h||[]]};let a;return q(i,()=>{var y;(y=a==null?void 0:a.abort)==null||y.call(a),a=typeof AbortController<"u"?new AbortController:{};const p=u(t.timeout);let f;return p&&(f=setTimeout(()=>a.abort(),p),a.signal.onabort=()=>clearTimeout(f)),(t.$fetch||globalThis.$fetch)(o.value,{signal:a.signal,...l}).finally(()=>{clearTimeout(f)})},T)}function R(s,e,c){const[t={},r]=typeof e=="string"?[{},e]:[e,c];return x(s,{...t,lazy:!0},r)}function A(s){var c;const e=[((c=u(s.method))==null?void 0:c.toUpperCase())||"GET",u(s.baseURL)];for(const t of[s.params||s.query]){const r=u(t);if(!r)continue;const o={};for(const[n,i]of Object.entries(r))o[u(n)]=u(i);e.push(o)}return e}export{x as a,R as u};
