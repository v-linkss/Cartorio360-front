import{K as q,ck as s,cV as x,p as T,cW as A}from"./D6IlaHd-.js";import{a as F}from"./C0runyKZ.js";function j(n,r,c){const[e={},u]=typeof r=="string"?[{},r]:[r,c],t=q(()=>s(n)),a=e.key||x([u,typeof t.value=="string"?t.value:"",...R(e)]);if(!a||typeof a!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+a);if(!n)throw new Error("[nuxt] [useFetch] request is missing.");const i=a===u?"$f"+a:a;if(!e.baseURL&&typeof t.value=="string"&&t.value[0]==="/"&&t.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:d,lazy:y,default:b,transform:w,pick:g,watch:h,immediate:v,getCachedData:D,deep:E,dedupe:k,...O}=e,p=T({...A,...O,cache:typeof e.cache=="boolean"?void 0:e.cache}),_={server:d,lazy:y,default:b,transform:w,pick:g,immediate:v,getCachedData:D,deep:E,dedupe:k,watch:h===!1?[]:[p,t,...h||[]]};let o;return F(i,()=>{var m;(m=o==null?void 0:o.abort)==null||m.call(o,new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),o=typeof AbortController<"u"?new AbortController:{};const l=s(e.timeout);let f;return l&&(f=setTimeout(()=>o.abort(new DOMException("Request aborted due to timeout.","AbortError")),l),o.signal.onabort=()=>clearTimeout(f)),(e.$fetch||globalThis.$fetch)(t.value,{signal:o.signal,...p}).finally(()=>{clearTimeout(f)})},_)}function R(n){var c;const r=[((c=s(n.method))==null?void 0:c.toUpperCase())||"GET",s(n.baseURL)];for(const e of[n.params||n.query]){const u=s(e);if(!u)continue;const t={};for(const[a,i]of Object.entries(u))t[s(a)]=s(i);r.push(t)}return r}export{j as u};
